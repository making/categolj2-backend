<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <sec:http pattern="/oauth/**" create-session="stateless"
              authentication-manager-ref="clientAuthenticationManager" entry-point-ref="oauthAuthenticationEntryPoint"
              use-expressions="false">
        <sec:intercept-url pattern="/oauth/**" access="IS_AUTHENTICATED_FULLY"/>
        <sec:http-basic entry-point-ref="oauthAuthenticationEntryPoint"/>
        <sec:anonymous enabled="false"/>
        <!-- include this only if you need to authenticate clients via request parameters -->
        <sec:custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
        <sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
    </sec:http>

    <!-- OAuth2 -->
    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="categolj2"/>
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="clientAuthenticationManager"/>
        <property name="authenticationEntryPoint" ref="oauthAuthenticationEntryPoint"/>
    </bean>

    <sec:authentication-manager id="clientAuthenticationManager">
        <sec:authentication-provider user-service-ref="clientDetailsUserService"/>
    </sec:authentication-manager>

    <bean id="clientDetailsUserService"
          class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails"/>
    </bean>
    <bean id="authorizationRequestManager"
          class="org.springframework.security.oauth2.provider.DefaultAuthorizationRequestManager">
        <constructor-arg index="0" ref="clientDetails"/>
    </bean>

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/>

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="clientDetailsService" ref="clientDetails"/>
    </bean>

    <oauth:resource-server id="oauthAuthenticationProcessingFilter"
                           entry-point-ref="oauthAuthenticationEntryPoint"
                           resource-id="categolj2"
                           token-services-ref="tokenServices"/>

    <oauth:authorization-server client-details-service-ref="clientDetails"
                                token-services-ref="tokenServices"
                                authorization-request-manager-ref="authorizationRequestManager">
        <oauth:refresh-token/>
        <oauth:password authentication-manager-ref="authenticationManager"/>
    </oauth:authorization-server>

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="categolj2-admin"
                      authorized-grant-types="password,authorization_code,refresh_token,implicit"
                      secret="categolj2-secret" authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT"/>
    </oauth:client-details-service>
    <oauth:expression-handler id="oauthExpressionHandler"/>
    <oauth:web-expression-handler id="oauthWebExpressionHandler"/>

    <!-- User Authentication -->
    <bean id="userDetailsService"
          class="am.ik.categolj2.domain.service.userdetails.Categolj2UserDetailsService">
    </bean>

    <sec:authentication-manager id="authenticationManager">
        <sec:authentication-provider
                user-service-ref="userDetailsService">
            <sec:password-encoder ref="passwordEncoder"/>
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>
